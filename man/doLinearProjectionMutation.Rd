% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutator.linearprojection.R
\name{doLinearProjectionMutation}
\alias{doLinearProjectionMutation}
\title{Linear projection mutation}
\usage{
doLinearProjectionMutation(coords, pm = 0.1, p.jitter = 0,
  jitter.sd = 0, ...)
}
\arguments{
\item{coords}{[\code{matrix}]\cr
An n times 2 matrix of point coordinates in \eqn{[0, 1]^2}.}

\item{pm}{[\code{numeric(1)}]\cr
Probability of node mutation. Note that each node is subject to mutation
independent of the the nodes.
Default is \eqn{0.1}, i.e., in expectation 10\% of the points are mutated.}

\item{p.jitter}{[\code{numeric(1)}]\cr
Probability to add Gaussian noise to mutated points.
Default is 0, i.e., no Gaussian noise at all.}

\item{jitter.sd}{[\code{numeric(1)}]\cr
Standard deviation for Gaussian noise.
Defaults to 0.1. Note that this parameter has an effect only if \code{p.jitter} is
greater zero.}

\item{...}{[any]\cr
Currently not used.}
}
\value{
[\code{matrix}] Mutated coordinates.
}
\description{
This is a generalization of the \code{\link{doAxisProjectionMutation}}.
A subset \eqn{Q \subseteq P} (each point selected with independent
probability \code{pm}) is selected. Next, a random intercept \eqn{a \in [0, 1]}
is sampled. In a subsequent step a slope \eqn{m} is sampled uniformly at random from
\eqn{[0, 3]} (if \eqn{a < 0.5}) and \eqn{[-3, 0]} (if \eqn{a \geq 0.5}). This heuristic
distinction of cases ensures that with high probability the resulting linear function
\eqn{a + mx} runs inside the bounding-box \eqn{[0, 1]^2} at least partially. Finally, all
points \eqn{p \in Q} are subject to an orthogonal projection on \eqn{a + mx}.
Additionally, with probability \code{p.jitter}, Gaussian noise is added to the
second coordinate of the projected points.
}
\seealso{
\code{\link{build}}

Other mutation operators: \code{\link{doAxisProjectionMutation}},
  \code{\link{doClusterMutation}},
  \code{\link{doGridMutation}},
  \code{\link{doImplosionMutation}},
  \code{\link{doNormalMutation}},
  \code{\link{doRotationMutation}},
  \code{\link{doUniformMutation}}
}
\concept{mutation operators}
