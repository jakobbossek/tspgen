% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mutator.grid.R
\name{doGridMutation}
\alias{doGridMutation}
\title{Grid mutation}
\usage{
doGridMutation(coords, box.min = 0.1, box.max = 0.3, p.rot = 0,
  p.jitter = 0, jitter.sd = 0, ...)
}
\arguments{
\item{coords}{[\code{matrix}]\cr
An n times 2 matrix of point coordinates in \eqn{[0, 1]^2}.}

\item{box.min}{[\code{numeric(1)}]\cr
Minimum for sampled box width and height respectively.
Default is 0.1.}

\item{box.max}{[\code{numeric(1)}]\cr
Maximum for sampled box width and height respectively.
Default is 0.3.}

\item{p.rot}{[\code{numeric(1)}]\cr
Probability of rotation, i.e,  that mutated points are subject to rotation.
Default is 0, i.e., no rotation.}

\item{p.jitter}{[\code{numeric(1)}]\cr
Probability to add Gaussian noise to mutated points.
Default is 0, i.e., no Gaussian noise at all.}

\item{jitter.sd}{[\code{numeric(1)}]\cr
Standard deviation for Gaussian noise.
Defaults to 0.1. Note that this parameter has an effect only if \code{p.jitter} is
greater zero.}

\item{...}{[any]\cr
Currently not used.}
}
\value{
[\code{matrix}] Mutated coordinates.
}
\description{
This mutation operator is designed to introduce a partial grid structure
into to point of a given Euclidean problem instance. This is achieved by generating
a random box of width and height \eqn{w, h \in [box.min, box.max]} and placing it
at random within the boundaries \eqn{[0, 1]^2}. All points \eqn{Q \subseteq P} inside
the box are affected by the mutation. Point set \eqn{Q} is replaced by a quadratic
grid of points \eqn{Q'} with \eqn{g = \lfloor \sqrt{|Q|} \rfloor} rows and columns respectively.
Note that if \eqn{g^2 < |Q|} we ignore \eqn{|Q| - g} random points of \eqn{Q}, i.e., these
points are not touched.
Subsequent, optional steps involve rotation and noise addition: with probability \eqn{p.rot}
\eqn{Q'} is rotated by a random angle \eqn{alpha \in [0, \pi/2]} and with probability
\code{p.jitter} all points in \eqn{Q} are perturbed by additive Gaussian noise with
mean \eqn{(0,0)} and standard deviation \code{jitter.sd} in each dimension.
}
\seealso{
\code{\link{build}}

Other mutation operators: \code{\link{doAxisProjectionMutation}},
  \code{\link{doClusterMutation}},
  \code{\link{doCompressionMutation}},
  \code{\link{doExpansionMutation}},
  \code{\link{doExplosionMutation}},
  \code{\link{doImplosionMutation}},
  \code{\link{doLinearProjectionMutation}},
  \code{\link{doNormalMutation}},
  \code{\link{doRotationMutation}},
  \code{\link{doUniformMutation}}
}
\concept{mutation operators}
